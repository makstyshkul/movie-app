{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    tokenKey = 'auth_token';\n    loggedInSubject = new BehaviorSubject(this.hasToken());\n    loggedIn$ = this.loggedInSubject.asObservable();\n    hasToken() {\n      return !!localStorage.getItem(this.tokenKey);\n    }\n    register(token) {\n      localStorage.setItem(this.tokenKey, token);\n      this.loggedInSubject.next(true);\n    }\n    login(token) {\n      localStorage.setItem(this.tokenKey, token);\n      this.loggedInSubject.next(true);\n    }\n    logout() {\n      localStorage.removeItem(this.tokenKey);\n      this.loggedInSubject.next(false);\n    }\n    isLoggedIn() {\n      return this.loggedInSubject.value;\n    }\n    static ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}