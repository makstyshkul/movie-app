{"ast":null,"code":"import { environment } from '../enviroment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MovieService = /*#__PURE__*/(() => {\n  class MovieService {\n    http;\n    watchLaterList = [];\n    watchedList = [];\n    likedList = [];\n    apiKey = environment.TMDB_API_KEY;\n    baseUrl = environment.TMDB_BASE_URL;\n    constructor(http) {\n      this.http = http;\n    }\n    getMovieDetails(id) {\n      return this.http.get(`${this.baseUrl}/movie/${id}?api_key=${this.apiKey}&language=en-US`);\n    }\n    getMovieVideos(id) {\n      return this.http.get(`${this.baseUrl}/movie/${id}/videos?api_key=${this.apiKey}&language=en-US`);\n    }\n    getLikedMap() {\n      const data = localStorage.getItem('liked');\n      return data ? JSON.parse(data) : {};\n    }\n    isMovieLiked(movieId) {\n      return this.getLikedMap()[movieId] === true;\n    }\n    getNowPlayingMovies(page = 1) {\n      return this.http.get(`${this.baseUrl}/movie/now_playing?api_key=${this.apiKey}&language=en-US&page=${page}`);\n    }\n    getGenres() {\n      return this.http.get(`${this.baseUrl}/genre/movie/list?api_key=${this.apiKey}&language=en-US`);\n    }\n    getWatchLater() {\n      return this.watchLaterList;\n    }\n    getWatched() {\n      return this.watchedList;\n    }\n    getFavorites() {\n      return this.likedList;\n    }\n    addToWatchLater(movie) {\n      if (!this.watchLaterList.find(m => m.id === movie.id)) {\n        this.watchLaterList.push(movie);\n      }\n    }\n    markAsWatched(movie) {\n      if (!this.watchedList.find(m => m.id === movie.id)) {\n        this.watchedList.push(movie);\n      }\n    }\n    setLiked(id, liked, movie) {\n      if (liked && movie && !this.likedList.find(m => m.id === id)) {\n        this.likedList.push(movie);\n      } else if (!liked) {\n        this.likedList = this.likedList.filter(m => m.id !== id);\n      }\n    }\n    removeFromList(list, id) {\n      if (list === 'watch') this.watchLaterList = this.watchLaterList.filter(m => m.id !== id);\n      if (list === 'watched') this.watchedList = this.watchedList.filter(m => m.id !== id);\n      if (list === 'favorite') this.likedList = this.likedList.filter(m => m.id !== id);\n    }\n    static ɵfac = function MovieService_Factory(t) {\n      return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MovieService,\n      factory: MovieService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return MovieService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}