{"ast":null,"code":"var __runInitializers = this && this.__runInitializers || function (thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n    value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\nvar __esDecorate = this && this.__esDecorate || function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) {\n    if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n    return f;\n  }\n  var kind = contextIn.kind,\n    key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _,\n    done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n    var context = {};\n    for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n    for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n    context.addInitializer = function (f) {\n      if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n      extraInitializers.push(accept(f || null));\n    };\n    var result = (0, decorators[i])(kind === \"accessor\" ? {\n      get: descriptor.get,\n      set: descriptor.set\n    } : descriptor[key], context);\n    if (kind === \"accessor\") {\n      if (result === void 0) continue;\n      if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n      if (_ = accept(result.get)) descriptor.get = _;\n      if (_ = accept(result.set)) descriptor.set = _;\n      if (_ = accept(result.init)) initializers.unshift(_);\n    } else if (_ = accept(result)) {\n      if (kind === \"field\") initializers.unshift(_);else descriptor[key] = _;\n    }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\nimport { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { RouterModule } from '@angular/router';\nlet IsLoggedHeaderComponent = (() => {\n  let _classDecorators = [Component({\n    selector: 'app-is-logged-header',\n    standalone: true,\n    imports: [CommonModule, InputTextModule, ButtonModule, RouterModule],\n    templateUrl: './is-logged-header.component.html',\n    styleUrl: './is-logged-header.component.scss'\n  })];\n  let _classDescriptor;\n  let _classExtraInitializers = [];\n  let _classThis;\n  let _instanceExtraInitializers = [];\n  let _subscribedMovies_decorators;\n  let _subscribedMovies_initializers = [];\n  let _subscribedMovies_extraInitializers = [];\n  let _subscriptionCount_decorators;\n  let _subscriptionCount_initializers = [];\n  let _subscriptionCount_extraInitializers = [];\n  let _unsubscribeMovie_decorators;\n  let _unsubscribeMovie_initializers = [];\n  let _unsubscribeMovie_extraInitializers = [];\n  let _onDocumentClick_decorators;\n  var IsLoggedHeaderComponent = class {\n    static {\n      _classThis = this;\n    }\n    static {\n      const _metadata = typeof Symbol === \"function\" && Symbol.metadata ? Object.create(null) : void 0;\n      _subscribedMovies_decorators = [Input()];\n      _subscriptionCount_decorators = [Input()];\n      _unsubscribeMovie_decorators = [Output()];\n      _onDocumentClick_decorators = [HostListener('document:click', ['$event'])];\n      __esDecorate(this, null, _onDocumentClick_decorators, {\n        kind: \"method\",\n        name: \"onDocumentClick\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"onDocumentClick\" in obj,\n          get: obj => obj.onDocumentClick\n        },\n        metadata: _metadata\n      }, null, _instanceExtraInitializers);\n      __esDecorate(null, null, _subscribedMovies_decorators, {\n        kind: \"field\",\n        name: \"subscribedMovies\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"subscribedMovies\" in obj,\n          get: obj => obj.subscribedMovies,\n          set: (obj, value) => {\n            obj.subscribedMovies = value;\n          }\n        },\n        metadata: _metadata\n      }, _subscribedMovies_initializers, _subscribedMovies_extraInitializers);\n      __esDecorate(null, null, _subscriptionCount_decorators, {\n        kind: \"field\",\n        name: \"subscriptionCount\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"subscriptionCount\" in obj,\n          get: obj => obj.subscriptionCount,\n          set: (obj, value) => {\n            obj.subscriptionCount = value;\n          }\n        },\n        metadata: _metadata\n      }, _subscriptionCount_initializers, _subscriptionCount_extraInitializers);\n      __esDecorate(null, null, _unsubscribeMovie_decorators, {\n        kind: \"field\",\n        name: \"unsubscribeMovie\",\n        static: false,\n        private: false,\n        access: {\n          has: obj => \"unsubscribeMovie\" in obj,\n          get: obj => obj.unsubscribeMovie,\n          set: (obj, value) => {\n            obj.unsubscribeMovie = value;\n          }\n        },\n        metadata: _metadata\n      }, _unsubscribeMovie_initializers, _unsubscribeMovie_extraInitializers);\n      __esDecorate(null, _classDescriptor = {\n        value: _classThis\n      }, _classDecorators, {\n        kind: \"class\",\n        name: _classThis.name,\n        metadata: _metadata\n      }, null, _classExtraInitializers);\n      IsLoggedHeaderComponent = _classThis = _classDescriptor.value;\n      if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value: _metadata\n      });\n      __runInitializers(_classThis, _classExtraInitializers);\n    }\n    router = __runInitializers(this, _instanceExtraInitializers);\n    authService;\n    isDropdownVisible = false;\n    subscribedMovies = __runInitializers(this, _subscribedMovies_initializers, []);\n    subscriptionCount = (__runInitializers(this, _subscribedMovies_extraInitializers), __runInitializers(this, _subscriptionCount_initializers, 0));\n    showSubscriptionDropdown = (__runInitializers(this, _subscriptionCount_extraInitializers), false);\n    toggleSubscriptionDropdown() {\n      this.showSubscriptionDropdown = !this.showSubscriptionDropdown;\n    }\n    unsubscribeMovie = __runInitializers(this, _unsubscribeMovie_initializers, new EventEmitter());\n    unsubscribe(movieId) {\n      this.unsubscribeMovie.emit(movieId);\n    }\n    constructor(router, authService) {\n      __runInitializers(this, _unsubscribeMovie_extraInitializers);\n      this.router = router;\n      this.authService = authService;\n    }\n    toggleDropdown() {\n      this.isDropdownVisible = !this.isDropdownVisible;\n    }\n    onDocumentClick(event) {\n      const target = event.target;\n      if (!target.closest('.user-avatar')) {\n        this.isDropdownVisible = false;\n      }\n    }\n    onAvatarClick(event) {\n      event.stopPropagation();\n      this.isDropdownVisible = !this.isDropdownVisible;\n    }\n    logout() {\n      this.authService.logout();\n      this.router.navigate(['/home']);\n    }\n    navigateToCommunity() {\n      this.router.navigate(['/community']);\n    }\n    navigateToMovies() {\n      this.router.navigate(['/movies']);\n    }\n    navigateToProfile() {\n      this.router.navigate(['/profile']);\n    }\n    navigateToTop() {\n      this.router.navigate(['/top']);\n    }\n    navigateToRecommended() {\n      this.router.navigate(['/recommended']);\n    }\n  };\n  return IsLoggedHeaderComponent = _classThis;\n})();\nexport { IsLoggedHeaderComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}